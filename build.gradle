plugins {
    id 'org.springframework.boot' version '2.3.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.google.protobuf" version "0.8.17"
}

apply plugin: 'com.google.protobuf'

def protobufVersion = "3.19.2"

def grpcVersion = "1.14.0"

group 'org.tron'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    //spring boot
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation('org.apache.logging.log4j:log4j-to-slf4j') {
        version {
            strictly '2.15.0'
        }
    }
    implementation('org.apache.logging.log4j:log4j-api') {
        version {
            strictly '2.15.0'
        }
    }
    implementation "org.springframework.boot:spring-boot-starter-jetty"
    implementation "org.springframework.boot:spring-boot-configuration-processor"
    //end spring boot

    compile group: 'com.google.protobuf', name: 'protobuf-java', version: protobufVersion
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: protobufVersion

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.17.Final'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.69'

    compile "org.apache.commons:commons-lang3:3.4"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/protos'
        }
        java {
            srcDir 'src/main/java'
        }
    }

}

protobuf {
    generatedFilesBaseDir = "$projectDir/src"
    protoc {
        artifact = "com.google.protobuf:protoc:3.5.1-1"
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.9.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { outputSubDir = "java" }
            }
        }
        all()*.plugins {
            grpc {
                outputSubDir = "java"
            }
        }
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}


clean.doFirst {
    delete "src/main/java/org/tron/p2p/protos"
}


